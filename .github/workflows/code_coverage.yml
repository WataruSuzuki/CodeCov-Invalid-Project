name: Android Library Coverage Example

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  multi-modules:
    runs-on: macOS-latest
    steps:
    - uses: actions/checkout@v1

    - name: Setup Code Climate test-reporter
      run: |
        cd Android-Project
        curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-darwin-amd64 > ./cc-test-reporter
        chmod +x ./cc-test-reporter
        ./cc-test-reporter before-build

    - name: Run lib's JUnit TEST
      run: |
        cd Android-Project
        ./gradlew lib:testDebugUnitTest

    - name: Run lib's Espresso TEST
      uses: ReactiveCircus/android-emulator-runner@v2.4.0
      with:
        api-level: 29
        script: ./emulator-lib.sh

    - name: Run app's JUnit TEST
      run: |
        cd Android-Project
        ./gradlew sampleapp:testDebugUnitTest

    - name: Run app's Espresso TEST
      uses: ReactiveCircus/android-emulator-runner@v2.4.0
      with:
        api-level: 29
        script: ./emulator.sh

    - name: Merge coverage report
      run: |
        cd Android-Project
        ./gradlew jacocoMergedReport

    - name: Upload coverage report to CodeCov
      run: |
        cd Android-Project
        bash <(curl -s https://codecov.io/bash) -f "./lib/build/reports/jacoco/jacocoMergedReport/jacocoMergedReport.xml"
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

    - name: Upload coverage report to Code Climate
      run: |
        cd Android-Project
        cp lib/build/reports/jacoco/jacocoMergedReport/jacocoMergedReport.xml jacoco.xml
        JACOCO_SOURCE_PATH="lib/src/main/java" ./cc-test-reporter format-coverage jacoco.xml --input-type jacoco
        ./cc-test-reporter upload-coverage
      env:
        CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}
